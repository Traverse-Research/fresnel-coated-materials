This file contains coefficients for ACEScg from datasets provided in the supplemental code. Code below doesn't contain packing.
Simple 16 bit encoding already allows all coefficients to represented by a float4x4.

// --------------------------------------------------- \\

float3 polynomialFit(float v, float3 c0, float3 c1, float3 c2) {
    return c2 * pow(v, 2.0) + c1 * v + c0;
}

float ni01 = (min(ni, 2.5) - 1.0) / 1.5;
float3 p = polynomialFit(ni01, c0, c1, c2);
float3 a = polynomialFit(ni01, c3, c4, c5);
float3 F0 = polynomialFit(ni01, c6, c7, c8);

float3 v = a * cosTheta * pow(1.0 - cosTheta, p);
return saturate(F0 + (1.0 - F0) * pow(1.0 - cosTheta, 5) - v);


// Ag 32 bit
float3 c0 = float3(3.77470112339, 3.79144768734, 4.50440688291);
float3 c1 = float3(-0.0997014596229, -0.00918506303519, -3.04925202664);
float3 c2 = float3(-0.127750169199, -0.635429868247, 0.985994354369);
float3 c3 = float3(0.149742596185, 0.139894913422, 0.00564393639898);
float3 c4 = float3(-0.463205675908, -0.562751137964, -0.806631522108);
float3 c5 = float3(0.137850043732, 0.221621704871, 0.458408322235);
float3 c6 = float3(0.965344496687, 0.959125031403, 0.919950905053);
float3 c7 = float3(-0.0457581648214, -0.0497582040451, -0.0641937034922);
float3 c8 = float3(0.0199119655415, 0.0226791484252, 0.0358401833482);


// Ag 16 bit
float3 c0 = float3(3.77539, 3.79102, 4.50391);
float3 c1 = float3(-0.0997314, -0.00918579, -3.04883);
float3 c2 = float3(-0.127808, -0.635254, 0.98584);
float3 c3 = float3(0.14978, 0.139893, 0.00564575);
float3 c4 = float3(-0.463135, -0.562988, -0.806641);
float3 c5 = float3(0.137817, 0.22168, 0.458496);
float3 c6 = float3(0.965332, 0.958984, 0.919922);
float3 c7 = float3(-0.0457458, -0.0497437, -0.064209);
float3 c8 = float3(0.0199127, 0.0226746, 0.0358276);


// Al 32 bit
float3 c0 = float3(6.85929949016, 6.42428548377, 5.61562519746);
float3 c1 = float3(-4.93551361577, -4.57334248055, -4.2448008665);
float3 c2 = float3(1.78986159491, 1.3497980428, 0.653746778581);
float3 c3 = float3(2.05444488052, 1.64287712513, 1.05613587301);
float3 c4 = float3(-2.71523512115, -2.35097276848, -1.89516017727);
float3 c5 = float3(0.992171751127, 0.876123699896, 0.817943768932);
float3 c6 = float3(0.91251400606, 0.917316655179, 0.921954493053);
float3 c7 = float3(-0.111414603878, -0.10505148456, -0.0968121698104);
float3 c8 = float3(0.0178648896369, 0.0182876192863, 0.0177471000204);


// Al 16 bit
float3 c0 = float3(6.85938, 6.42578, 5.61719);
float3 c1 = float3(-4.93359, -4.57422, -4.24609);
float3 c2 = float3(1.79004, 1.34961, 0.653809);
float3 c3 = float3(2.05469, 1.64258, 1.05566);
float3 c4 = float3(-2.71484, -2.35156, -1.89551);
float3 c5 = float3(0.992188, 0.875977, 0.817871);
float3 c6 = float3(0.912598, 0.91748, 0.921875);
float3 c7 = float3(-0.111389, -0.105042, -0.0968018);
float3 c8 = float3(0.017868, 0.01828, 0.017746);


// Au 32 bit
float3 c0 = float3(4.08687735181, 3.9231824181, 2.86825644643);
float3 c1 = float3(-0.831715039614, -2.20387542251, -0.591830594027);
float3 c2 = float3(-0.369155997835, 0.718211359171, 0.307177011312);
float3 c3 = float3(0.223412306371, 0.0101956730845, -0.000894366740929);
float3 c4 = float3(-1.16625772544, -1.75830977098, -2.91360768572);
float3 c5 = float3(0.541583176736, 0.927998084162, 1.04404638025);
float3 c6 = float3(0.908931794638, 0.791817646561, 0.406205913121);
float3 c7 = float3(-0.0952178601058, -0.152643063381, -0.369555543159);
float3 c8 = float3(0.044968730636, 0.0902130973045, 0.240242184273);


// Au 16 bit
float3 c0 = float3(4.08594, 3.92383, 2.86914);
float3 c1 = float3(-0.831543, -2.20312, -0.591797);
float3 c2 = float3(-0.369141, 0.718262, 0.307129);
float3 c3 = float3(0.223389, 0.0101929, -0.000894547);
float3 c4 = float3(-1.16602, -1.75879, -2.91406);
float3 c5 = float3(0.541504, 0.928223, 1.04395);
float3 c6 = float3(0.908691, 0.791992, 0.40625);
float3 c7 = float3(-0.0952148, -0.152588, -0.369629);
float3 c8 = float3(0.0449829, 0.09021, 0.240234);


// Be 32 bit
float3 c0 = float3(7.1612518928, 7.19882291023, 7.18912092255);
float3 c1 = float3(-0.928486547986, -1.43001909873, -3.07666166304);
float3 c2 = float3(-3.75693890335, -3.49334880844, -2.1127925684);
float3 c3 = float3(4.4528330192, 4.40046730013, 4.0155333584);
float3 c4 = float3(-9.1819503487, -9.3534193811, -9.31815797496);
float3 c5 = float3(4.36322384147, 4.5898610019, 4.8925465896);
float3 c6 = float3(0.523333512393, 0.522409700243, 0.522033983922);
float3 c7 = float3(-0.396611830397, -0.391176881706, -0.376155030234);
float3 c8 = float3(0.128258098675, 0.122949869348, 0.10880342264);


// Be 16 bit
float3 c0 = float3(7.16016, 7.19922, 7.1875);
float3 c1 = float3(-0.928711, -1.42969, -3.07617);
float3 c2 = float3(-3.75781, -3.49414, -2.11328);
float3 c3 = float3(4.45312, 4.40234, 4.01562);
float3 c4 = float3(-9.17969, -9.35156, -9.32031);
float3 c5 = float3(4.36328, 4.58984, 4.89062);
float3 c6 = float3(0.523438, 0.522461, 0.521973);
float3 c7 = float3(-0.396729, -0.391113, -0.376221);
float3 c8 = float3(0.128296, 0.122925, 0.108826);


// Co 32 bit
float3 c0 = float3(6.13119613715, 6.0406818501, 5.60381597573);
float3 c1 = float3(-3.0680531291, -3.46327378264, -4.08819825322);
float3 c2 = float3(-0.553198200379, -0.0853883698663, 1.06406486752);
float3 c3 = float3(2.78754734882, 2.54178178991, 1.77408986872);
float3 c4 = float3(-6.27491056172, -6.15450312312, -5.31932955175);
float3 c5 = float3(3.00835958793, 3.03359247452, 2.66596206109);
float3 c6 = float3(0.660927784538, 0.646712592603, 0.615238072853);
float3 c7 = float3(-0.319107897807, -0.321716768735, -0.330329357948);
float3 c8 = float3(0.0932258640818, 0.0957019285589, 0.112908136665);


// Co 16 bit
float3 c0 = float3(6.13281, 6.03906, 5.60547);
float3 c1 = float3(-3.06836, -3.46289, -4.08984);
float3 c2 = float3(-0.553223, -0.0853882, 1.06445);
float3 c3 = float3(2.78711, 2.54102, 1.77441);
float3 c4 = float3(-6.27344, -6.15625, -5.32031);
float3 c5 = float3(3.00781, 3.0332, 2.66602);
float3 c6 = float3(0.661133, 0.646484, 0.615234);
float3 c7 = float3(-0.319092, -0.321777, -0.330322);
float3 c8 = float3(0.0932007, 0.0957031, 0.112915);


// Cr 32 bit
float3 c0 = float3(6.61377912813, 6.43436283724, 5.99486960062);
float3 c1 = float3(-2.4960849093, -2.24153689985, -2.89168065593);
float3 c2 = float3(4.7341119419, 3.97684131057, -0.463383132837);
float3 c3 = float3(4.13281899626, 3.82533565511, 2.64939006576);
float3 c4 = float3(-5.50223187188, -5.26268790065, -5.76195767927);
float3 c5 = float3(1.60777640896, 1.42645299471, 2.66524691527);
float3 c6 = float3(0.638421273156, 0.652690418657, 0.690288166905);
float3 c7 = float3(-0.391153253581, -0.379818197015, -0.30512617994);
float3 c8 = float3(0.136813416351, 0.133967243576, 0.089562238659);


// Cr 16 bit
float3 c0 = float3(6.61328, 6.43359, 5.99609);
float3 c1 = float3(-2.49609, -2.24219, -2.89258);
float3 c2 = float3(4.73438, 3.97656, -0.463379);
float3 c3 = float3(4.13281, 3.82617, 2.64844);
float3 c4 = float3(-5.50391, -5.26172, -5.76172);
float3 c5 = float3(1.60742, 1.42676, 2.66602);
float3 c6 = float3(0.638184, 0.652832, 0.69043);
float3 c7 = float3(-0.391113, -0.379883, -0.305176);
float3 c8 = float3(0.136841, 0.133911, 0.0895386);


// Cu 32 bit
float3 c0 = float3(4.11238938008, 3.71332969891, 3.40023370725);
float3 c1 = float3(-1.75733587978, -1.68748339942, -1.37830780524);
float3 c2 = float3(0.340709057351, 0.618090824074, 0.609262480788);
float3 c3 = float3(0.270028750601, 0.360201213065, 0.284115770687);
float3 c4 = float3(-1.84174712931, -2.89861708965, -3.10870541921);
float3 c5 = float3(0.886009941462, 1.3051937525, 1.31274942369);
float3 c6 = float3(0.829022638645, 0.657121601846, 0.558955607474);
float3 c7 = float3(-0.154330565108, -0.288203557203, -0.344189800153);
float3 c8 = float3(0.0764692467258, 0.152314610082, 0.193922820799);


// Cu 16 bit
float3 c0 = float3(4.11328, 3.71289, 3.40039);
float3 c1 = float3(-1.75781, -1.6875, -1.37793);
float3 c2 = float3(0.34082, 0.618164, 0.609375);
float3 c3 = float3(0.27002, 0.360107, 0.28418);
float3 c4 = float3(-1.8418, -2.89844, -3.10938);
float3 c5 = float3(0.88623, 1.30566, 1.3125);
float3 c6 = float3(0.829102, 0.657227, 0.559082);
float3 c7 = float3(-0.154297, -0.288086, -0.344238);
float3 c8 = float3(0.0764771, 0.152344, 0.19397);


// CuZn 32 bit
float3 c0 = float3(4.14101284472, 4.0171193162, 3.1398192979);
float3 c1 = float3(-1.28835903852, -1.90741463513, -1.1187411457);
float3 c2 = float3(0.0552924614739, 0.474641582875, 0.406717156361);
float3 c3 = float3(0.425707461451, 0.232159670495, -0.20895792432);
float3 c4 = float3(-1.90720077663, -2.23866672854, -2.87847171387);
float3 c5 = float3(0.835129183388, 1.12309781672, 1.30807363924);
float3 c6 = float3(0.842080423279, 0.778742556954, 0.471317756926);
float3 c7 = float3(-0.159133938074, -0.191630068102, -0.301965818002);
float3 c8 = float3(0.0724630196002, 0.100210730153, 0.210074740336);


// CuZn 16 bit
float3 c0 = float3(4.14062, 4.01562, 3.14062);
float3 c1 = float3(-1.28809, -1.90723, -1.11914);
float3 c2 = float3(0.0552979, 0.474609, 0.406738);
float3 c3 = float3(0.425781, 0.232178, -0.208984);
float3 c4 = float3(-1.90723, -2.23828, -2.87891);
float3 c5 = float3(0.834961, 1.12305, 1.30762);
float3 c6 = float3(0.842285, 0.778809, 0.471436);
float3 c7 = float3(-0.15918, -0.19165, -0.302002);
float3 c8 = float3(0.0724487, 0.10022, 0.210083);


// Fe 32 bit
float3 c0 = float3(7.17691336527, 7.23551584898, 6.95195986539);
float3 c1 = float3(-4.40809371397, -4.57179963481, -5.8576575186);
float3 c2 = float3(-0.780881070741, -0.692469872531, 1.05935615452);
float3 c3 = float3(3.58700413181, 3.58847770469, 2.79759826671);
float3 c4 = float3(-8.99181729929, -9.07809476228, -7.89700598198);
float3 c5 = float3(4.89971522207, 4.97952412417, 4.38663825123);
float3 c6 = float3(0.507999593714, 0.498955108148, 0.485490709928);
float3 c7 = float3(-0.368226691826, -0.369196364359, -0.365772176385);
float3 c8 = float3(0.10251345504, 0.102546177094, 0.106390427628);


// Fe 16 bit
float3 c0 = float3(7.17578, 7.23438, 6.95312);
float3 c1 = float3(-4.40625, -4.57031, -5.85938);
float3 c2 = float3(-0.780762, -0.692383, 1.05957);
float3 c3 = float3(3.58789, 3.58789, 2.79688);
float3 c4 = float3(-8.99219, -9.07812, -7.89844);
float3 c5 = float3(4.89844, 4.98047, 4.38672);
float3 c6 = float3(0.507812, 0.499023, 0.485596);
float3 c7 = float3(-0.368164, -0.369141, -0.365723);
float3 c8 = float3(0.102539, 0.102539, 0.106384);


// Hg 32 bit
float3 c0 = float3(5.8932816878, 5.59970305732, 4.86091100994);
float3 c1 = float3(-2.7814610737, -2.82806569562, -2.28046875342);
float3 c2 = float3(0.61320895822, 0.404045738154, 0.545649861183);
float3 c3 = float3(2.5258671766, 2.11557822018, 1.28300737234);
float3 c4 = float3(-4.34372169039, -4.14651305109, -3.29570692847);
float3 c5 = float3(1.60250413121, 1.67422805232, 1.34823004745);
float3 c6 = float3(0.775170106472, 0.774110887774, 0.775898583988);
float3 c7 = float3(-0.258672899255, -0.252705071156, -0.245409543173);
float3 c8 = float3(0.0742846796462, 0.0737737718559, 0.087550053943);


// Hg 16 bit
float3 c0 = float3(5.89453, 5.60156, 4.85938);
float3 c1 = float3(-2.78125, -2.82812, -2.28125);
float3 c2 = float3(0.613281, 0.404053, 0.54541);
float3 c3 = float3(2.52539, 2.11523, 1.2832);
float3 c4 = float3(-4.34375, -4.14844, -3.29492);
float3 c5 = float3(1.60254, 1.67383, 1.34863);
float3 c6 = float3(0.775391, 0.773926, 0.775879);
float3 c7 = float3(-0.258789, -0.252686, -0.245361);
float3 c8 = float3(0.0742798, 0.0737915, 0.0875244);


// Ir 32 bit
float3 c0 = float3(6.18949721701, 6.13431506493, 5.80383862755);
float3 c1 = float3(-1.83207984766, -2.53548035898, -3.57241365222);
float3 c2 = float3(-0.756523011921, -0.869475717595, 0.352695754976);
float3 c3 = float3(3.21862727342, 2.96205046145, 2.18438923261);
float3 c4 = float3(-5.81110585649, -6.07314350775, -5.61601138856);
float3 c5 = float3(2.25335433947, 2.72489476403, 2.75551284291);
float3 c6 = float3(0.687432130783, 0.683475065201, 0.653530435498);
float3 c7 = float3(-0.326510492179, -0.314767061841, -0.316648521513);
float3 c8 = float3(0.10309172733, 0.0928542807283, 0.0988445305678);


// Ir 16 bit
float3 c0 = float3(6.19141, 6.13281, 5.80469);
float3 c1 = float3(-1.83203, -2.53516, -3.57227);
float3 c2 = float3(-0.756348, -0.869629, 0.352783);
float3 c3 = float3(3.21875, 2.96289, 2.18359);
float3 c4 = float3(-5.8125, -6.07422, -5.61719);
float3 c5 = float3(2.25391, 2.72461, 2.75586);
float3 c6 = float3(0.6875, 0.683594, 0.65332);
float3 c7 = float3(-0.326416, -0.314697, -0.31665);
float3 c8 = float3(0.103088, 0.0928345, 0.0988159);


// K 32 bit
float3 c0 = float3(3.32349971127, 3.06716070615, 2.54422347696);
float3 c1 = float3(-2.49318053587, -2.29677602484, -1.77772002484);
float3 c2 = float3(1.10815806175, 1.03712618985, 0.797895929029);
float3 c3 = float3(-0.143220385898, -0.174813879245, -0.254873680889);
float3 c4 = float3(-0.207394131376, -0.161964465923, -0.00584118753258);
float3 c5 = float3(0.159492646545, 0.145024277077, 0.0743730012861);
float3 c6 = float3(0.943453578051, 0.93687686193, 0.923574215258);
float3 c7 = float3(-0.0191634961435, -0.0124274739193, 0.0159207909754);
float3 c8 = float3(0.0217392468642, 0.0208067911707, 0.00896447497895);


// K 16 bit
float3 c0 = float3(3.32422, 3.06641, 2.54492);
float3 c1 = float3(-2.49414, -2.29688, -1.77734);
float3 c2 = float3(1.1084, 1.03711, 0.797852);
float3 c3 = float3(-0.143188, -0.174805, -0.254883);
float3 c4 = float3(-0.207397, -0.161987, -0.0058403);
float3 c5 = float3(0.159546, 0.14502, 0.0744019);
float3 c6 = float3(0.943359, 0.937012, 0.92334);
float3 c7 = float3(-0.019165, -0.0124283, 0.0159149);
float3 c8 = float3(0.0217438, 0.020813, 0.00896454);


// Mn 32 bit
float3 c0 = float3(6.58834325332, 6.54174111343, 6.15084016888);
float3 c1 = float3(-3.99159077727, -4.51247367685, -5.20716788538);
float3 c2 = float3(-0.378618219607, 0.215418151586, 1.45693703986);
float3 c3 = float3(3.06608598052, 2.82275932268, 2.08385267748);
float3 c4 = float3(-7.58063112449, -7.37003248288, -6.31702777244);
float3 c5 = float3(3.95956200499, 3.90938721528, 3.35071990071);
float3 c6 = float3(0.578144897422, 0.563855532427, 0.537944033235);
float3 c7 = float3(-0.34768770873, -0.348653734736, -0.355585668712);
float3 c8 = float3(0.0989797403371, 0.100669133054, 0.115558023683);


// Mn 16 bit
float3 c0 = float3(6.58984, 6.54297, 6.15234);
float3 c1 = float3(-3.99219, -4.51172, -5.20703);
float3 c2 = float3(-0.378662, 0.215454, 1.45703);
float3 c3 = float3(3.06641, 2.82227, 2.08398);
float3 c4 = float3(-7.58203, -7.37109, -6.31641);
float3 c5 = float3(3.95898, 3.91016, 3.35156);
float3 c6 = float3(0.578125, 0.563965, 0.538086);
float3 c7 = float3(-0.347656, -0.348633, -0.355469);
float3 c8 = float3(0.098999, 0.100647, 0.11554);


// Mo 32 bit
float3 c0 = float3(7.35992282006, 6.8343190172, 5.81988089361);
float3 c1 = float3(-5.68122073147, -5.22407121697, -4.3055809295);
float3 c2 = float3(2.1816946326, 1.79536766361, 0.480965199034);
float3 c3 = float3(1.3356186991, 1.1047789789, 0.803816624654);
float3 c4 = float3(-1.64237847034, -1.46102521168, -1.34124334118);
float3 c5 = float3(0.60316897427, 0.539240261408, 0.557782640787);
float3 c6 = float3(0.95665485343, 0.956397907077, 0.95053205162);
float3 c7 = float3(-0.0563660369217, -0.0563985195231, -0.0639716470165);
float3 c8 = float3(0.00679305112749, 0.00773183399992, 0.011442822507);


// Mo 16 bit
float3 c0 = float3(7.35938, 6.83594, 5.82031);
float3 c1 = float3(-5.67969, -5.22266, -4.30469);
float3 c2 = float3(2.18164, 1.79492, 0.480957);
float3 c3 = float3(1.33594, 1.10449, 0.803711);
float3 c4 = float3(-1.64258, -1.46094, -1.34082);
float3 c5 = float3(0.603027, 0.539062, 0.557617);
float3 c6 = float3(0.956543, 0.956543, 0.950684);
float3 c7 = float3(-0.056366, -0.0563965, -0.0639648);
float3 c8 = float3(0.00679398, 0.00773239, 0.0114441);


// Na 32 bit
float3 c0 = float3(4.66278640253, 4.26617255229, 3.67639007776);
float3 c1 = float3(-3.41857659897, -3.17289784195, -2.83157446575);
float3 c2 = float3(1.17391837081, 1.1920976513, 1.22985814079);
float3 c3 = float3(-0.00583260689603, -0.0299349729064, -0.129091490733);
float3 c4 = float3(-0.307175816206, -0.329858133477, -0.308932031789);
float3 c5 = float3(0.1791646499, 0.197636136613, 0.211926838746);
float3 c6 = float3(0.969428576875, 0.960692435447, 0.939371627802);
float3 c7 = float3(-0.0243108722397, -0.0287507647315, -0.0301827800004);
float3 c8 = float3(0.0136940141666, 0.0181688330235, 0.0263983619815);


// Na 16 bit
float3 c0 = float3(4.66406, 4.26562, 3.67578);
float3 c1 = float3(-3.41797, -3.17383, -2.83203);
float3 c2 = float3(1.17383, 1.19238, 1.22949);
float3 c3 = float3(-0.00583267, -0.0299377, -0.12915);
float3 c4 = float3(-0.307129, -0.329834, -0.308838);
float3 c5 = float3(0.179199, 0.197632, 0.211914);
float3 c6 = float3(0.969238, 0.960449, 0.939453);
float3 c7 = float3(-0.0243073, -0.0287476, -0.0301819);
float3 c8 = float3(0.0136948, 0.0181732, 0.0263977);


// Nb 32 bit
float3 c0 = float3(7.23049559206, 7.2820343404, 7.04185193567);
float3 c1 = float3(-5.0125071211, -4.71796767302, -5.51693070688);
float3 c2 = float3(-0.223536968301, -0.603491069989, 0.572401697048);
float3 c3 = float3(3.42737169186, 3.58257747143, 3.03601596106);
float3 c4 = float3(-8.91178490311, -9.13517870298, -8.26442378332);
float3 c5 = float3(4.93326280412, 5.03740756798, 4.58166271954);
float3 c6 = float3(0.490525823896, 0.491521672773, 0.492707530486);
float3 c7 = float3(-0.368727291351, -0.370111315445, -0.365298970942);
float3 c8 = float3(0.102388730989, 0.10268529509, 0.103541791941);


// Nb 16 bit
float3 c0 = float3(7.23047, 7.28125, 7.04297);
float3 c1 = float3(-5.01172, -4.71875, -5.51562);
float3 c2 = float3(-0.223511, -0.603516, 0.572266);
float3 c3 = float3(3.42773, 3.58203, 3.03516);
float3 c4 = float3(-8.91406, -9.13281, -8.26562);
float3 c5 = float3(4.93359, 5.03906, 4.58203);
float3 c6 = float3(0.490479, 0.491455, 0.492676);
float3 c7 = float3(-0.368652, -0.370117, -0.365234);
float3 c8 = float3(0.102417, 0.102661, 0.103516);


// Ni 32 bit
float3 c0 = float3(5.86805560882, 5.60520260864, 4.51178830164);
float3 c1 = float3(-3.96507697333, -4.22381658726, -3.41703466674);
float3 c2 = float3(0.620863623472, 1.18015078857, 1.55807809148);
float3 c3 = float3(2.13198951874, 1.73991935541, 0.929373187376);
float3 c4 = float3(-5.77690696627, -5.33525209588, -4.08181361118);
float3 c5 = float3(2.90573007121, 2.68957277638, 1.87496083598);
float3 c6 = float3(0.628199478393, 0.604091446722, 0.538592949362);
float3 c7 = float3(-0.324454885167, -0.33421129095, -0.374246965374);
float3 c8 = float3(0.102515875353, 0.115354975416, 0.167158406566);


// Ni 16 bit
float3 c0 = float3(5.86719, 5.60547, 4.51172);
float3 c1 = float3(-3.96484, -4.22266, -3.41797);
float3 c2 = float3(0.621094, 1.17969, 1.55762);
float3 c3 = float3(2.13281, 1.74023, 0.929199);
float3 c4 = float3(-5.77734, -5.33594, -4.08203);
float3 c5 = float3(2.90625, 2.68945, 1.875);
float3 c6 = float3(0.628418, 0.604004, 0.538574);
float3 c7 = float3(-0.324463, -0.334229, -0.374268);
float3 c8 = float3(0.102539, 0.115356, 0.167114);


// Pb 32 bit
float3 c0 = float3(6.07909050522, 5.69888398561, 4.46921026255);
float3 c1 = float3(-4.18739283256, -4.17612899992, -2.21883508893);
float3 c2 = float3(0.888080423865, 0.538378993299, 2.10463074801);
float3 c3 = float3(1.55653440875, 1.12118235411, 0.552691476852);
float3 c4 = float3(-2.43269899341, -1.97401196787, -1.03115514958);
float3 c5 = float3(0.943543159776, 0.842081493357, 0.219081652863);
float3 c6 = float3(0.906380312125, 0.919886999306, 0.929854591946);
float3 c7 = float3(-0.117935661204, -0.0988084271545, -0.100327917774);
float3 c8 = float3(0.0228149588614, 0.018486396291, 0.0341873841785);


// Pb 16 bit
float3 c0 = float3(6.07812, 5.69922, 4.46875);
float3 c1 = float3(-4.1875, -4.17578, -2.21875);
float3 c2 = float3(0.888184, 0.538574, 2.10547);
float3 c3 = float3(1.55664, 1.12109, 0.552734);
float3 c4 = float3(-2.43359, -1.97363, -1.03125);
float3 c5 = float3(0.943359, 0.842285, 0.219116);
float3 c6 = float3(0.90625, 0.919922, 0.929688);
float3 c7 = float3(-0.11792, -0.0988159, -0.100342);
float3 c8 = float3(0.0228119, 0.0184937, 0.0341797);


// Pd 32 bit
float3 c0 = float3(5.67116414359, 5.53631554996, 5.04850111758);
float3 c1 = float3(-2.98566840556, -3.17239162821, -3.34684190906);
float3 c2 = float3(0.091677027354, 0.375233834029, 1.01954811037);
float3 c3 = float3(2.18023543193, 1.95073959208, 1.32323024089);
float3 c4 = float3(-5.00492696353, -4.92884088333, -4.34738738836);
float3 c5 = float3(2.28406993959, 2.31257182909, 2.06582659562);
float3 c6 = float3(0.710125541434, 0.6916146794, 0.654833327108);
float3 c7 = float3(-0.290745850171, -0.298315860123, -0.313068033013);
float3 c8 = float3(0.0889929058855, 0.0958393778457, 0.118573291581);


// Pd 16 bit
float3 c0 = float3(5.67188, 5.53516, 5.04688);
float3 c1 = float3(-2.98633, -3.17188, -3.34766);
float3 c2 = float3(0.0916748, 0.375244, 1.01953);
float3 c3 = float3(2.17969, 1.95117, 1.32324);
float3 c4 = float3(-5.00391, -4.92969, -4.34766);
float3 c5 = float3(2.2832, 2.3125, 2.06641);
float3 c6 = float3(0.709961, 0.691406, 0.654785);
float3 c7 = float3(-0.290771, -0.29834, -0.312988);
float3 c8 = float3(0.0889893, 0.0958252, 0.118591);


// Rh 32 bit
float3 c0 = float3(6.16430257831, 5.96827477119, 5.74338106891);
float3 c1 = float3(-3.1796538611, -2.64761912837, -2.76316965883);
float3 c2 = float3(1.60947048905, 0.753372693458, -0.00659366314677);
float3 c3 = float3(2.91459451383, 2.72540573197, 2.36125749094);
float3 c4 = float3(-4.43954965352, -4.54508101704, -4.81123923584);
float3 c5 = float3(1.51530407325, 1.61126959401, 2.05078902137);
float3 c6 = float3(0.777620882289, 0.760090142029, 0.73917067714);
float3 c7 = float3(-0.262481700231, -0.274767740179, -0.278512896574);
float3 c8 = float3(0.0723852754349, 0.0810200727391, 0.0821109075473);


// Rh 16 bit
float3 c0 = float3(6.16406, 5.96875, 5.74219);
float3 c1 = float3(-3.17969, -2.64844, -2.76367);
float3 c2 = float3(1.60938, 0.753418, -0.0065918);
float3 c3 = float3(2.91406, 2.72461, 2.36133);
float3 c4 = float3(-4.44141, -4.54688, -4.8125);
float3 c5 = float3(1.51562, 1.61133, 2.05078);
float3 c6 = float3(0.777832, 0.760254, 0.739258);
float3 c7 = float3(-0.262451, -0.274658, -0.278564);
float3 c8 = float3(0.0723877, 0.0809937, 0.0820923);


// Ta 32 bit
float3 c0 = float3(4.383414747, 4.66781934463, 6.20006650701);
float3 c1 = float3(-3.94078904761, -3.98967034208, -5.00177860134);
float3 c2 = float3(2.2054719009, 1.94280899864, 1.18770175548);
float3 c3 = float3(0.772773224154, 0.967559245848, 2.21223193666);
float3 c4 = float3(-3.64705290559, -4.22069294779, -6.45221244724);
float3 c5 = float3(1.60513776386, 1.95302510395, 3.41425408593);
float3 c6 = float3(0.359656049939, 0.464567503214, 0.553642529431);
float3 c7 = float3(-0.437059976453, -0.400750980354, -0.350076441755);
float3 c8 = float3(0.213927427366, 0.180289974244, 0.110541298469);


// Ta 16 bit
float3 c0 = float3(4.38281, 4.66797, 6.19922);
float3 c1 = float3(-3.94141, -3.99023, -5.0);
float3 c2 = float3(2.20508, 1.94238, 1.1875);
float3 c3 = float3(0.772949, 0.967773, 2.21289);
float3 c4 = float3(-3.64648, -4.21875, -6.45312);
float3 c5 = float3(1.60547, 1.95312, 3.41406);
float3 c6 = float3(0.359619, 0.4646, 0.553711);
float3 c7 = float3(-0.437012, -0.400635, -0.350098);
float3 c8 = float3(0.213867, 0.180298, 0.110535);


// W 32 bit
float3 c0 = float3(7.37931550257, 7.50697884387, 7.67197959814);
float3 c1 = float3(-0.774154158192, -1.7765063903, -3.60699852245);
float3 c2 = float3(-4.28550587692, -3.72669264628, -2.26153519305);
float3 c3 = float3(4.63026859397, 4.5522113502, 4.21665554184);
float3 c4 = float3(-9.75135377322, -10.1424709789, -10.2586981876);
float3 c5 = float3(4.77091101888, 5.24390660448, 5.65208032924);
float3 c6 = float3(0.49109570048, 0.480374218366, 0.455695826878);
float3 c7 = float3(-0.404790641864, -0.397464804469, -0.387790636508);
float3 c8 = float3(0.131909413774, 0.123432628782, 0.112460870876);


// W 16 bit
float3 c0 = float3(7.37891, 7.50781, 7.67188);
float3 c1 = float3(-0.773926, -1.77637, -3.60742);
float3 c2 = float3(-4.28516, -3.72656, -2.26172);
float3 c3 = float3(4.62891, 4.55078, 4.21484);
float3 c4 = float3(-9.75, -10.1406, -10.2578);
float3 c5 = float3(4.76953, 5.24219, 5.65234);
float3 c6 = float3(0.491211, 0.480469, 0.455811);
float3 c7 = float3(-0.404785, -0.397461, -0.387695);
float3 c8 = float3(0.131958, 0.123413, 0.112488);